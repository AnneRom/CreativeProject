@font-face {
    font-family: 'Nunito-Bold';
    src: url(fonts/Nunito-Bold.eot);
    src: url(fonts/Nunito-Bold.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-Bold.otf) format('otf'),
         url(fonts/Nunito-Bold.svg#Nunito-Bold) format('svg'),
         url(fonts/Nunito-Bold.ttf) format('truetype'),
         url(fonts/Nunito-Bold.woff) format('woff'),
         url(fonts/Nunito-Bold.woff2) format('woff2');
  }

/* #region function->rem, em, prc */
/*@function rem($px) {
    $result: math.div($px, 16) + rem;
    @return $result;
}

@function em($px, $fs) {
    $result: math.div($px, $fs) + em;
    @return $result;
}

@function prc($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}*/
/* #endregion */

:root {
    --lightorange: rgb(255, 170, 0);
    --green:rgb(57, 147, 57);
    --darkorange:rgb(171, 114, 1);
    --darkgreen:rgb(0, 72, 0);
    --grayNike: #F6F6F6;
    --darkGrayNike: #CACACB;

}

body {
    font-family: 'Nunito-Bold';
    background-color: white;
}
header {
    background-color: var(--grayNike);
    font-size: 20px;
    font-family: 'Nunito-Bold';
    border-radius: 20px;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
}
.hidden {
    top: calc(-65 / 16 * 1rem);
}

.main-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
}
.main-menu {
    display: flex;
    justify-content: space-between;
    margin-right: 5rem;
    width: 63.375rem;
    flex-wrap: wrap;
}

.menu ul {
    display: flex;
    justify-content: space-around;
    align-items: center;
    text-align: center;
    width: 37.5rem;
    list-style: none;
    padding: 0;
    margin: 0;
    height: calc(65/16*1rem);
}

.menu ul li {
    display: flex;
    align-items: center;
    /*flex-grow: 1;*/
    text-align: center;
    margin: 0;
    height: calc(40/16*1rem);
    border-bottom: 3px solid var(--grayNike);
}

.menu ul li:hover {
    border-bottom: 3px solid black;
}

.menu ul li a {
    text-decoration: none;
    color: black;
}

.logo {
    margin-left: 2.5rem;
}

.logo img {
    width: 80px;
}

.add-menu {
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* width: 25rem; */
    width: 21rem;
    font-size: calc(28 / 16 * 1rem)/*1.75rem*/
}

.icons a {
    color: black;
}

.search
{
    display: flex;
    align-items: center;
}

.search input[type="search"] {
    width: 11.25rem;
    height: calc(48/16*1rem);
    border: none;
    border-radius: 20px;
    background-color: white;
    font-size: calc(20/16*1rem);/*20px*/
    padding-left: 3.125rem;

}
.search input[type="search"]::placeholder {
    color: gray;
    font-size: 1.25rem;
}

.search input[type="search"]::-webkit-search-cancel-button {
    -webkit-appearance: none;
    height: calc(20/20*1em);/*20px: 20 - розмір хрестика за макетом, 20 - розмір шрифту батьківського елементу*/
    width: calc(20/20*1em);
    background: url(images/close.png);
    background-size: cover;
    opacity: 0.7;
}


.search .btn-search i {
    background-color: white;
    padding: 0.625rem;
    border-radius: 50%;
    transform: translateX(100%);
}

.icons i {
    background-color: white;
    padding: 0.625rem;
    border-radius: 50%;
}

.icons i:hover {
    background-color: var(--darkGrayNike);

}
.btn-search i:hover {
    background-color: var(--darkGrayNike);

}

.icons
{
    display: flex;
    width: 6.25em;
    justify-content: space-between;
    align-items: center;    
}

.menu-icon {
    display: none;
}

.sidebar-menu {
    position: fixed;
    top: 0;
    right: -400px;
    width: 400px;
    height: 100%;
    background-color: #fff;
    z-index: 9999;
    filter: blur(0px);
    transition: right 0.3s ease;
    font-family: 'Nunito-Bold';
}
.sidebar-menu ul {
    list-style: none;
    margin: 50px;
    padding: 0;
    
}
.sidebar-menu li {
    padding: 20px;
    border-bottom: 4px solid white;
}
.sidebar-menu li:hover {
    border-bottom: 4px solid black;
}
.sidebar-menu a {
    text-decoration: none;
    color: black;
    font-size: calc(34/16*1rem);
}
.close-btn {
    text-align: right;
    font-size: calc(38/16*1rem);
    padding-right: 50px;
    padding-top: 20px;
}
.close-btn i {
    background-color: var(--darkGrayNike);
    color: black;
    padding: calc(16/16*1rem) calc(20/16*1rem);
    border-radius: 50%;
    cursor: pointer;
}
.sidebar-menu.active {
    right: 0;
}
.content {
    filter: blur(0px);
    transition: filter 0.3s ease;
}
.blur {
    filter: blur(5px);
}

.no-scroll {
    overflow: hidden;
}



.catalog {
    background-color: var(--grayNike);
    /* display: flex;*/
    justify-content: center;
    align-items: flex-start;
    column-gap: 1em;
    border-radius: 0 0 20px 20px;
    display: none;
   /* height: auto;*/
    /*overflow: hidden;*/
    /*transition: height 2s ease-in-out;*/
}

#catalog-1, #catalog-2, #catalog-3, #catalog-4 {
    columns: 5 200px;
}

#catalog-5 {
    columns: 3 200px;
}

#catalog-6 {
    columns: 4 200px;
}

.catalog div {
    margin: 0;
    padding: 15px;
    break-inside: avoid;
}

.catalog div ul {
    list-style: none;
    padding: 0;
    font-size: calc(18/16*1rem);
}

.catalog div h3 {
    font-size: calc(20/16*1rem);
}

.catalog-anim-in {
    animation-name: slide;
    animation-duration: 600ms;
}

.catalog-anim-out {
    animation-name: slide-out;
    animation-duration: 600ms;
}

@media screen and (max-width: 1200px){
    .menu, .search form{
        display: none;
    }
    .menu-icon {
        display: block;
    }
    .main-menu, .add-menu {
        width: calc(265/16*1rem);
    }
    .main-menu {
        margin-right: calc(100/16*1rem);
    }
    .search .btn-search i {
        transform: translateX(0%);
    }
    .icons{
        width: calc(165/16*1rem);
    }
}
main {
    margin-top: calc(65 / 16 * 1rem);
}
.gallery {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    overflow: hidden;
}
.gallery-container {
    display: flex;
    gap: 30px;
    width: max-content;
    /* transform: translateX(0);
    transition: transform 1 ease; */
    /* overflow-x: scroll; */
}
.gallery-item {
   width: 350px;
   height: 350px; 
   position: relative;
   overflow: hidden;
}
.gallery-item img {
    height: 100%;
    width: 100%;
    object-fit: cover;
}
.gallery-item h3 {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    margin: 0;
    padding: 5px 10px;
    text-align: center;
    font-size: 20px;
}
.prev i, .next i{
    padding: calc((30 - 20)/2*1px) calc((30 - 12.5)/2*1px);
}
.prev, .next{
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: var(--darkGrayNike);
    border-radius: 50%;
    cursor: pointer;
    font-size: 20px;
    z-index: 10;
}
.prev {
    left: 100px;
}
.next {
    right: 100px;
}

.head1 {
    margin: 0;
    margin-left: 2.5rem;
    padding: 2.5rem 0;
    font-size: 48px;
    /* transform: translateX(300px); */
}

@keyframes slide {
    0%
    {
       /**/
       max-height: 0;
       opacity: 0;
    }
    50%
    {
        opacity: 0;
    }
   
    100%
    {
       /**/
       max-height: 600px;
       opacity: 1;
       

    }
}

@keyframes slide-out {
    0%
    {
       /**/
       max-height: 600px;
       opacity: 1;
    }
    
    100%
    {
       /**/
       max-height: 0;
       opacity: 0;

    }
}

/*
.search input[type="search"] {
    width: 180px;
    background-color: aquamarine; 
    border: none; 
    padding: 10px; 
    border-radius: 30px;
    height: 40px;
}

.search input[type="search"]::placeholder {}

.search .btn-search i {
    padding: 12.5px;
    background-color: aquamarine;
    border-radius: 30px;
}
*/

/* #region COLUMNS*/
/*Вдастивості для батьківського елементу

column-count, column-width, columns

column-width - визначає ширину стовця. Але фактична ширина 
стовпчика може 
бути більшою або меншою.
Значення column-width (px, em, rem), auto, inherit (примусове успадкування)
em = font-size в пікселях 

column-count - визначає кількість колонок, яку потрібно побудувати.

Коли вказуємо column-count та column-width, column-count - максимальна кількість колонок,
column-width - мінімальна ширина колонки.

columns - об'єднує дві властивості.
*/

/*column-gap - розрив між колонками. За замовчуванням column-gap = 1em. 
column-rule - визначає стиль границь між колонками.*/

/*column-fill - визначає, як заповнювати стовпці - збалансовано чи ні.
balance(за замовчуванням) - контент всередині колонок розподіляєься рівномірно.
auto - стовпці заповнюються послідовно, коли контент не влазить в минулу колонку по висоті.
!!Працює, лише якщо вказана висота.
*/

/*Властивість вкладених елементів: column-span - визначає, як повинен відображатися елемент в багатоколоковому тексті - 
займати ширину всіх колонок або тільки одну з них*/

/*break-inside - визначає, чи буде переходити контент з одного вкаленого елменту в інший.*/

.text {
    background-color: aliceblue;
   /*column-width: 200px;
    column-count: 3;*/
    columns: 2 300px;
    column-gap: 10px;
    column-rule: 5px solid rgb(128, 0, 255);
    /*height: 500px;
    column-fill: auto;*/
}

.text h2 {
    background-color: rgb(128, 0, 255);
    padding: 15px;
    color: white;
    column-span: all; 
}

.text #par2 {
    /*column-span: all;*/
}

.text p {
    break-inside: avoid;
    margin: 0;
}

.text span {
    color: rgb(128, 0, 255);
}

.em {
    background-color: darkgoldenrod;
    width: 5em;/*1em = 16px*/
    height: 5em;
}
/* #endregion */

/* #region MEASURE */

/*Одиниці виміру

px - це абсолютна одиниця виміру, фіксована величина.

em - це відносна одиниця виміру, яка залежить від поточного або успадкованого розміру шрифту.
Потрібно пам'ятати який коекретно шрифт впливає на обчислення (успадкування)

rem - це відносна одиниця виміру, яка залежить або від розміру шрифта, який прописаний в <html>,
або розмір шрифта браузера по замовчуванню(16px)

vw, vh - це відносна одиниця виміру, яка залежить від розмірів viewport браузера (розмірів браузера)
vmin - залежить відносно мінімального значення між vw, vh
vmax - залежить відносно максимальне значення між vw, vh

% - це відносна величина, її визначають ВІДНОСНО різних значень:
ширина width - відносно батьківського елемента
висота height  - відносно висоти батьківського елемента, 
тільки якщо у батьківського елмента вказаний dysplay: flex/grid
при відносному позиціонуванні (position:relative) потрібні тіж самі умови
при абсолютному позиціонуванні (position:absolute) висоту батьківського елемента вказувати не обов'язково
відступи padding/margin - відносно ШИРИНИ батьківського елемента, навіть якщо задаються вертикальні відступи
transform:translate(x,y) - відносно ширини/висоти самого об'єкта до якого застосовано властивість
font-size, line-height - відносно розміру властивості font-size*/

.ex {
    width: 100px;
    height: 100px;
    background-color: blueviolet;
    /*position: relative;
    top: 50%;
    right: 10%;*/
    padding-top: 50%;/*150px*/
    padding-right: 50%;/*150px*/
    margin-bottom: 10%;/*30px*/
    transform: translate(100%, 50%);/*100px, 50px*/

}

.measure {
    display: flex;
    height: 500px;
    width: 300px;
    background-color: azure;
}
/* #endregion*/
