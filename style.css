@font-face {
    font-family: 'Nunito-Bold';
    src: url(fonts/Nunito-Bold.eot);
    src: url(fonts/Nunito-Bold.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-Bold.otf) format('otf'),
         url(fonts/Nunito-Bold.svg#Nunito-Bold) format('svg'),
         url(fonts/Nunito-Bold.ttf) format('truetype'),
         url(fonts/Nunito-Bold.woff) format('woff'),
         url(fonts/Nunito-Bold.woff2) format('woff2');
  }

body {
    font-family: 'Nunito-Bold';
    background-color:aqua;
    /*font-size: 10px;*/
}

/* #region COLUMNS*/
/*Вдастивості для батьківського елементу

column-count, column-width, columns

column-width - визначає ширину стовця. Але фактична ширина 
стовпчика може 
бути більшою або меншою.
Значення column-width (px, em, rem), auto, inherit (примусове успадкування)
em = font-size в пікселях 

column-count - визначає кількість колонок, яку потрібно побудувати.

Коли вказуємо column-count та column-width, column-count - максимальна кількість колонок,
column-width - мінімальна ширина колонки.

columns - об'єднує дві властивості.
*/

/*column-gap - розрив між колонками. За замовчуванням column-gap = 1em. 
column-rule - визначає стиль границь між колонками.*/

/*column-fill - визначає, як заповнювати стовпці - збалансовано чи ні.
balance(за замовчуванням) - контент всередині колонок розподіляєься рівномірно.
auto - стовпці заповнюються послідовно, коли контент не влазить в минулу колонку по висоті.
!!Працює, лише якщо вказана висота.
*/

/*Властивість вкладених елементів: column-span - визначає, як повинен відображатися елемент в багатоколоковому тексті - 
займати ширину всіх колонок або тільки одну з них*/

/*break-inside - визначає, чи буде переходити контент з одного вкаленого елменту в інший.*/

.text {
    background-color: aliceblue;
   /*column-width: 200px;
    column-count: 3;*/
    columns: 2 300px;
    column-gap: 10px;
    column-rule: 5px solid rgb(128, 0, 255);
    /*height: 500px;
    column-fill: auto;*/
}

.text h2 {
    background-color: rgb(128, 0, 255);
    padding: 15px;
    color: white;
    column-span: all; 
}

.text #par2 {
    /*column-span: all;*/
}

.text p {
    break-inside: avoid;
    margin: 0;
}

.text span {
    color: rgb(128, 0, 255);
}

.em {
    background-color: darkgoldenrod;
    width: 5em;/*1em = 16px*/
    height: 5em;
}
/* #endregion */

/* #region MEASURE */

/*Одиниці виміру

px - це абсолютна одиниця виміру, фіксована величина.

em - це відносна одиниця виміру, яка залежить від поточного або успадкованого розміру шрифту.
Потрібно пам'ятати який коекретно шрифт впливає на обчислення (успадкування)

rem - це відносна одиниця виміру, яка залежить або від розміру шрифта, який прописаний в <html>,
або розмір шрифта браузера по замовчуванню(16px)

vw, vh - це відносна одиниця виміру, яка залежить від розмірів viewport браузера (розмірів браузера)
vmin - залежить відносно мінімального значення між vw, vh
vmax - залежить відносно максимальне значення між vw, vh

% - це відносна величина, її визначають ВІДНОСНО різних значень:
ширина width - відносно батьківського елемента
висота height  - відносно висоти батьківського елемента, 
тільки якщо у батьківського елмента вказаний dysplay: flex/grid
при відносному позиціонуванні (position:relative) потрібні тіж самі умови
при абсолютному позиціонуванні (position:absolute) висоту батьківського елемента вказувати не обов'язково
відступи padding/margin - відносно ШИРИНИ батьківського елемента, навіть якщо задаються вертикальні відступи
transform:translate(x,y) - відносно ширини/висоти самого об'єкта до якого застосовано властивість
font-size, line-height - відносно розміру властивості font-size*/

.ex {
    width: 100px;
    height: 100px;
    background-color: blueviolet;
    /*position: relative;
    top: 50%;
    right: 10%;*/
    padding-top: 50%;/*150px*/
    padding-right: 50%;/*150px*/
    margin-bottom: 10%;/*30px*/
    transform: translate(100%, 50%);/*100px, 50px*/

}

.measure {
    display: flex;
    height: 500px;
    width: 300px;
    background-color: azure;
}
/* #endregion*/

